		StringBuffer и StringBuilder - в чем разница.
	Методы класса StringBuffer однопоточные. Если у нас есть массив чаров и нам надо докинуть в конец символов:
	1. Надо связать буфер с новыми символами
	2. Надо увеличить длину.
		На самом деле там много действий.
	Есть специальный shedule, который каждому потоку дает немного времени. Если у нас 2 thread, может возникнуть такая ситуация:
	1 нить входит, выполняет первое действие, замораживается, заходит вторая ветка, делает обе операции, потом продолжается первая, что будет?
	Это приведет к нарушению целостности данных. StringBuffer так написан, что такого не произойдет, он будет ждать, пока первый тред не отработает
Все это будет контролировать сама Java-машина. StringBuilder в отличии от StringBuffer не потокобезопасный, но он сильно теряет в производительности.
Мы будем пользоваться StringBuilder, по такой причине: потому что, даже если у нас в алгоритме много операций и каждая из них атомарная, сама программа
не является потокобезопасной, поэтому мы сами будет делать синхронизацию.

	Какие хорошие паттерны многопоточной разработки? В реальной жизни мы стараемся защищать более маленькими кусочками, иначе у нас просто получится
однопоточная программа. Здесь надо взвешивать, чтобы программа не была однопоточной.