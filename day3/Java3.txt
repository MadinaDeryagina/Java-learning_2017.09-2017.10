				Overloading(Перегрузка).
	В яве перегрузки операторов нет, за исключением "+", когда один из операндов явзяется строкой, в java есть только перегрузка функций.
Как функции определить, какой из методов выполнять? Надо задать для него сигнатуру - это имя метода + тип параметров. Имя параметров в перегрузке не учитывается
Примеры:
	public static void log(int message) {
        System.out.println("primitive: " + message);
    }

    public static void log(byte message) {
        System.out.println("primitive: " + message);
    }

    public static void log(String message){
        System.out.println(message);
    }
Теперь: можно ли создать public static log(int a) - нет, потому что у переменной a такой же тип, как у message, компилятор не может понять такой метод.
Можно ли прописать тип функции String вместо void? Ответ: можно, так как тип возвращаемого значения не учавствует в сигнатуре.
Важно!!! Сигнатура - это только имя функции и тип возвращаемого значения.
В Java можно в методы передавать динамическое количество параметров - это называется Vararg. делается это так:
	public static void log(int ... a)
	Пример вызова такой функции:
		log();
		log(1);
		log(1,2,3);
	Если у нас несколько функций такого типа, но есть без Vararg, компилятор по умолчанию выберет более узкое, т.е. при вызове 
	log(1); он выберет между public static void log(int ... a) и public static void log(int a) второй вариант, так как он наиболее узкий.
	
	Функцию main так-же можно перегружать и использовать в нем Vararg. Например main(String [] args) = main(String ... args)
	Итого: перегружать можно методы, операторы нельзя, компилятор не позволяет неоднозначности, компилятор смотрит ближайший узкий тип.